name: Rust

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache Cargo
        id: cache-cargo
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
      - name: Build
        run: cargo build --verbose --release
      - name: Upload binary
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: coap-cli-linux-x64
          path: target/release/coap-cli
      - name: Upload binary
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: coap-cli-windows-x64
          path: target/release/coap-cli.exe
  release:
    name: Release
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist/binaries
      - name: Create distribution archives
        run: |
          pushd dist/binaries/coap-cli-linux-x64 ; tar -zcf coap-cli-linux-x64-${{ github.ref_name }}.tgz * ; popd
          pushd dist/binaries/coap-cli-windows-x64 ; zip coap-cli-windows-x64-${{ github.ref_name }}.zip * ; popd
          mkdir -p dist/archives
          mv dist/binaries/coap-cli-linux-x64/coap-cli-linux-x64-${{ github.ref_name }}.tgz dist/archives
          mv dist/binaries/coap-cli-windows-x64/coap-cli-windows-x64-${{ github.ref_name }}.zip dist/archives
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            dist/archives/*
